Ansible: Sua infraestrutura como código:

    Aula 01: Primeiros passos com Ansible -------
   
        Introdução:

            A importância de fazer infraestrutura com código é que se trata da base da metodologia DevOps. Se você já trabalha com essa área ou quer começar a atuar nela, precisa deste conhecimento.
            Com Ansible escreveremos um playbook, para instalarmos uma aplicação completa com banco de dados, Webserver, além do próprio sistema da aplicação. Depois, converteremos o playbook em uma série de roles
            reutilizáveis, para entendermos como se separa este código e como ele pode ser usado como uma biblioteca extensível para outros projetos.

        
        Por que usar Ansible?

            Ao falarmos de DevOps precisamos falar de infraestrutura como um todo.
            O DevOps busca maneiras de encurtar o seu ciclo de feedbacks entre os times de desenvolvimento e estrutura, tornar o processo com repetições do lado da infraestrutura como já é feito no lado do
            desenvolvimento. Se oebsarnis en yna firna sunokes de definir DevOps, trata-se de levarmos a cultura ágil para a cultura de infraestrutura e integrá-las.

                Não é atoa que o nome 'DevOps' já vem da junção dos dois mundos 'Desenvolvimento' e 'Operacional', transformando-os em um único (ou mais próximo disso).

            É normal que tenha diferenças entre as empresas na aplicação da cultura DevOps, na maneira que trabalham essa ideia. Não existe apenas um meio de aplicarmos o DevOps ou uma bala de prata que vá resolver
            todos os problemas, um formato único, fixo e perfeito. Cada cultura organizacional entenderá qual é a melhor forma de aplicar os princípios de DevOps.

            Com algumas metodologias DevOps conseguiremos automatizar tudo aquilo que é feito na infraestrutura e garantir o estado dos servidores.

            Antes da cultura DevOps tudo tinha que ser feito com diversos scripts baseados no conhecimento de quem estava criando sem padrões ou documentação que abrangesse de fato tudo que era necessário para agilizar
            de forma eficaz toda a configuração da infra. Imagine a situação da de lidar com centenas de servidores.

            Era difícil garantir o estado das máquinas da mesma forma, manter estável. O princípio da infraestrutura como código nasce para que descrevamos o estado no qual precisamos que nossos servidores estejam, para
            caso ocorra algum problema ou algo precise ser modificado ou adicionado na infraestrutura, seja como adicionar um método ou uma classe na programação.

            O Ansible é uma ferramenta para garantirmos esse estado.

            Nós escreveremos uma série de scripts que garantem que os servidores controlados ficarão em um determinado estado.

            Vamos ver de forma superficial a topologia Ansible:

                - Temos a máquina de controle, que é onde fica o Ansible, e como o mesmo é baseado em Python, também temos a versão do Python junto dele.
                - Temos os hosts que devem ser controlados. Eles se comunicam via SSH e tem também o Python instalado.

                Obs: Diferente de algumas tecnologias de Infraestrutura como código, o Ansible não é dependente da instalação nas máquinas que devem ser configuradas.
                A maioria dos servidores de produção e desenvolvimento que encontramos hoje em dia tem Python e SSH, principalmente quando falamos de Linux.

                Ou seja, Conseguimos alterar o estado da máquina via conexão SSH, sem que seja necessário entrar nelas e digitar algum comando. O Ansible será responsável por fazer isso.

                Nosso trabalho será desenvolver os scripts que o Ansible usa.
                Temos três modelos de script:

                    - Arquivo de inventário: Arquivo que contém todas as máquinas que deverão ser configuradas.
                    - Playbook: "Receita" ...Este arquivo contém o script das ações que irão ser realizadas nos hosts alvos.
                    - Roles: Permite modularizar o código.

                Durante o conteúdo do curso nos aprofundaremos mais nestes três tipos de script.
                Basta entender que eles serão usados para que a máquina de controle configure os outros hosts.

                A vantagem é que não existe um número limite de máquinas, diferente de quando tinhamos que fazer tudo a mão, não importa agora se é apenas uma ou mil máquinas.
                Existem diferentes formas de montar esse inventário (que se trata da lista de máquinas a serem configuradas).

            No curso, nossa máquina física (real) será a nossa máquina de controle e instalaremos o VirtualBox e o Vagrant para criar máquinas virtuais que simularão os hosts que iremos configurar.
            Na nossa máquina física instalaremos o Ansible, com ele, será configurada a máquina virtual, montando inventário, playbooks e roles.
            Na nossa máquina virtual (host controlado), para o estudo de caso, instalaremos um Wordpress, e para isso será necessário ter o MySQL, Apache e PHP funcionando na máquina virtual que é o host controlado.


        Instalando Ansible e o primeiro comando:

            Podemos utilizar a nossa máquina de desenvolvimento para simular a máquina de controle, se caso tivermos uma máquina com Windows, não poderemos instalar o Ansible, precisaremos criar uma máquina virtual
            com Ubuntu para instalar o Ansible e o Python.

            Para fazer o estudo de caso precisaremos de outra máquina virtual usando Virtual Box e Vagrant.

            No Mac OS X precisariamos apenas usar o 'brew'.
            No Linux temos que utilizar o 'apt get' ao invés do 'brew'.

            Na documentação do Ansible podemos ver que ainda não temos suporte para usar o Windows como máquina de controle.

            Porém, podemos usar o bash do Ubuntu nas versões de Windows 10 posteriores à atualização creators update, possibilitando a instalação e o uso de todos os comandos necessários no curso. O passo a passo
            pode ser encontrado no blog oficial da Microsoft:

                https://blogs.msdn.microsoft.com/luisdem/2016/09/01/bash-on-windows-passo-a-passo/

            Se ainda não baixou, deve baixar o Virtual Box e o Vagrant.

                Virtual Box: https://www.virtualbox.org/

                Vagrant: https://www.vagrantup.com/downloads.html

            ------- Caso já esteja trabalhando numa máquina com Ubuntu ou Mac -------

                Digitamos o comando '-v' para saber a versão do Python e '--version' para identificarmos a versão do Ansible.

                Se já estalamos o Vagrant também poderemos ver a sua versão...

                    $ vagrant --version
            
                Para termos certeza que a distribuição do Ansible está funcionando, vamos rodar o comando Ansible contra uma máquina virtual de exemplo...

                    $ cd wordpress_com_ansible
                    $ ls
                    Vangrantfile        provisioning.retry         world.txt
                    group_vars          provisioning.yml
                    hosts               roles

                    $ atom

                Precisamos criar a nossa máquina virtual, veremos como ela pode ser acessada e, depois, rodaremos "Hello, World" na linha de comando.
                Precisamos de um arquivo 'vagrant.file' com as configurações da máquina que vai ser criada.
                Está fora do escopo aprender Vagrant, mas já tenho alguns arquivos de configuração Vagrant, além do arquivo do curso para usar como base...

        Questões aula 01:

            1 - Sobre Ansible e infraestrutura como código

                Temos as seguintes afirmativas sobre Ansible e Infraestrutura sobre código:

                A) Infraestrutura como código é a base da cultura DevOps, encurtando assim o ciclo de feedback entre os times de desenvolvimento e os de infraestrutura.

                B) É a partir da máquina de controle com o Ansible instalado que gerenciamos outras máquinas.

                C) As máquinas gerenciadas pelo Ansible só precisam do Python e de um servidor SSH instalados.

                Podemos afirmar que:

                Selecione uma alternativa

                R: Todas as afirmativas são verdadeiras.

                Realmente todas as afirmativas são verdadeiras. Animado para aprender mais sobre Ansible?

            
            2 - Um pouco mais sobre Ansible

                Temos as seguintes afirmativas a respeito do Ansible

                A) O Ansible é uma ferramenta que auxilia no processo de infraestrutura como código.

                B) Arquivo de inventário: arquivo com as "receitas de bolo" do que queremos fazer.

                C) Playbook: é aquele que lista todas as máquinas que serão utilizadas.

                Podemos afirmar que:

                Selecione uma alternativa

                R: As afirmativas B e C são falsas.

                Alternativa correta! O arquivo de inventário é aquele que lista todas as máquinas que serão configuradas e o Playbook é o arquivo com as "receitas de bolo" do que queremos fazer.


